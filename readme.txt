***********************************************************************************************************
                    Project: Web API to simulate the behaviour of audio file server.  
                    Done by: Yash Viroja  
***********************************************************************************************************
Technologies: Python with flask server, MongoDB  
Tools: Visual Studio, Postman, MongoDB Compass  
Python libraries: Flask, Mongo Engine   

Files:    1.) serveren.py (Contain python flask server and MongoDB database setup.)  
          2.) test.py (Contains python unittest module and various test cases to test the API.)  
Database structure:  
Main document: audio_metadata (Contain 3 sub document)  
Sub document:   (Contain audio files metadata as per document classification.)  
                         I.  song  
                         II.  podcast  
                         III.  audiobook 
 
Metadata Structure in sub document:  
     I.   Song: ex.  
          {"_id":{"$oid":"602e247678db1aa1332e9d22"},             ## Autogenerated Document ID  
                     "Id":{"$numberLong":"12123232000"},              ## Song Metadata  
                     "songName":"I wanna grow old with you.",   
                     "songDuration":220,  
                     "songUpload":{"$date":"2021-02-18T13:55:26.993Z"}  
                     }  
     II.   Podcast: ex.  
          {"_id":{"$oid":"602e1cee78db1aa1332e9d1f"},             ## Autogenerated Document ID  
                     "Id":{"$numberLong":"12123232000"},            ## Podcast Metadata  
                     "podcastName":"Ummid",   
                     "podcastDuration":25815,   
                     "podcastUpload":{"$date":"2021-02-18T13:23:18.251Z"},   
                     "podcastHost":"Zakir khan",   
                     "podcastParticipants":["Yash","raj","DK","DC"]  
                     }  
     III.  Audiobook : ex.  
          {"_id":{"$oid":"602e1bfc78db1aa1332e9d1b"},             ## Autogenerated Document ID  
                     "Id":{"$numberLong":"12123232000"},            ## Podcast Metadata  
                     "audiobookName":"The Alchemist",  
                     "audiobookAuthor":"polo cohelo",  
                     "audiobookUpload":{"$date":"2021-02-18T13:19:16.161Z"},  
                     "audiobookNarrator":  
                     "Yash","audiobookDuration":20550  
                     }  
API basics:  
Create API:- endpoint:  </audiometa>   methods: ['POST']  
[**Submit input Jason file as shown below, along with POST request to add it into database.   
** No need to add upload time as it is by default given as a current time.]  

               Formatexample:- {"audioFileType": "Song",  
                                            "audioFileMetadata": {"Id":"12123232000",  
                                                                       "songName":"I wanna grow old with you"  

                                                                       "songDuration":"220"  
                                                                        }  

                                                         }  
Delete API:- endpoint:  <audioFileType>/<audioFileID>   methods: ['DELETE']  
[**For <audioFileType> enter any of {Song, Podcast, Audiobook}.    
** For <audioFileID> enter Id of already present audio file which you want to delete.]  

Update API:- endpoint:  <audioFileType>/<audioFileID>  methods: ['PUT']  
[**For <audioFileType> enter any of {Song, Podcast, Audiobook}.    
** For <audioFileID> enter Id of already present audio file which you want to update.  
** Also input Jason file as shown below with only parameters which you need to update, along with PUT request.]  
Formatexample:-  If need to update podcast name and podcast participant from podcast with Id 12123232001,  
                                           {   
                                                         "podcastName": "Still  Porocessing",   
                                                         "podcastParticipants":  ["Yash", "raj","DK", "DC"]  
                                           }  
  
Get API:- endpoint:  <audioFileType>/<audioFileID>   methods: ['GET']  
[**For <audioFileType> enter any of {Song, Podcast, Audiobook}.    
** For <audioFileID> enter Id of already present audio file which you want to get.  
** If need all files of single format just enter <audioFileType>. ]  

  

  

  

  

  

  
